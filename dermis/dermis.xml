####dermis####
setwd('/home/zhaolab/R_analasis/dermis.harmony')
library(Seurat)
library(ggplot2)
library(cowplot)
library(Matrix)
library(dplyr)
library(ggsci)
library(scater)
library(SingleR)
library(monocle)
library(tibble)
library(harmony)
library(clusterProfiler)
library(topGO)
library(Rgraphviz)
library(pathview)
library(org.Hs.eg.db)
library(DOSE)
dle1 <- Read10X(data.dir = "./sample.result/20190529guoqian.dle/")
DLE1<- CreateSeuratObject(counts =dle1, min.cells = 3, min.features = 200,project = 'DLE_1')
dle2 <- Read10X(data.dir = "./sample.result/20190531caoyan.dle/")
DLE2<- CreateSeuratObject(counts =dle2, min.cells = 3, min.features = 200,project = 'DLE_2')
dle3 <- Read10X(data.dir = "./sample.result/20190726huangyicai.dle/")
DLE3<- CreateSeuratObject(counts =dle3, min.cells = 3, min.features = 200,project = 'DLE_3')
dle4 <- Read10X(data.dir = "./sample.result/20191204jinxiang.dle/")
DLE4<- CreateSeuratObject(counts =dle4, min.cells = 3, min.features = 200,project = 'DLE_4')
dle5 <- Read10X(data.dir = "./sample.result/20200713zhoumeiyun.dle/")
DLE5<- CreateSeuratObject(counts =dle5, min.cells = 3, min.features = 200,project = 'DLE_5')
sle1 <- Read10X(data.dir = "./sample.result/20190715lumin.sle/")
SLE1<- CreateSeuratObject(counts =sle1, min.cells = 3, min.features = 200,project = 'SLE_1')
sle2 <- Read10X(data.dir = "./sample.result/20190904taoxianggui.sle/")
SLE2<- CreateSeuratObject(counts =sle2, min.cells = 3, min.features = 200,project = 'SLE_2')
sle3 <- Read10X(data.dir = "./sample.result/20191029zhongguoyun.sle/")
SLE3<- CreateSeuratObject(counts =sle3, min.cells = 3, min.features = 200,project = 'SLE_3')
sle4 <- Read10X(data.dir = "./sample.result/20191103luodongrong.sle/")
SLE4<- CreateSeuratObject(counts =sle4, min.cells = 3, min.features = 200,project = 'SLE_4')
sle5 <- Read10X(data.dir = "./sample.result/20191103yuecuihua.sle/")
SLE5<- CreateSeuratObject(counts =sle5, min.cells = 3, min.features = 200,project = 'SLE_5')

sle6 <- Read10X(data.dir = "./sample.result/20191107huangxifeng.sle/")
SLE6<- CreateSeuratObject(counts =sle6, min.cells = 3, min.features = 200,project = 'SLE_6')

sle7 <- Read10X(data.dir = "./sample.result/20200718chengengtian.sle/")
SLE7<- CreateSeuratObject(counts =sle7, min.cells = 3, min.features = 200,project = 'SLE_7')

sle8 <- Read10X(data.dir = "./sample.result/20200723wumeifen.sle/")
SLE8<- CreateSeuratObject(counts =sle8, min.cells = 3, min.features = 200,project = 'SLE_8')

merged<-merge(DLE1,c(DLE2,DLE3,DLE4,DLE5,SLE1,SLE2,SLE3,SLE4,SLE5,SLE6,SLE7,SLE8))
save(merged,file = 'merged.all.dermis.Rdata')
rm(dle1,dle2,dle3,dle4,dle5,DLE1,DLE2,DLE3,DLE4,DLE5,sle1,sle2,sle3,sle4,sle5,sle6,sle7,sle8,SLE1,SLE2,SLE3,SLE4,SLE5,SLE6,SLE7,SLE8)
sam.name <- "multi"
if(!dir.exists(sam.name)){
              dir.create(sam.name)
}
merged[["percent.mt"]] <- PercentageFeatureSet(merged, pattern = "^MT-")
merged[["percent.ribo"]] <- PercentageFeatureSet(merged, pattern = "^RP[L|S]")#计算核糖体基因比例
#calculates the percentage of counts originating from red cells marker genes，红细胞基因含量
red.genes <- c("HBA1","HBA2","HBB")
merged[["percent.redcell"]] <- PercentageFeatureSet(merged, features=red.genes[!is.na(match(red.genes,rownames(merged)))])
pdf(paste0("./",sam.name,"features.count.percent.mt.pdf"),width = 20,height = 12)
VlnPlot(merged, features = c("nFeature_RNA", "nCount_RNA", "percent.mt","percent.ribo","percent.redcell"), ncol = 5,group.by = "orig.ident")
dev.off()
merged <- subset(merged, subset = nFeature_RNA > 200 & nFeature_RNA < 5000 & percent.mt < 20 & percent.redcell < 10) 
merged <- NormalizeData(merged, normalization.method = "LogNormalize",scale.factor = 10000)
merged <- FindVariableFeatures(merged, selection.method = "vst", nfeatures = 2000)
all.genes <- rownames(merged)
merged <- ScaleData(merged, features = all.genes)
merged <- ScaleData(merged, vars.to.regress = "percent.mt")
merged <- RunPCA(merged, features = VariableFeatures(object = merged))
dim.use <- 1:40
library(harmony)
merged=RunHarmony(merged,group.by.vars ='orig.ident')
merged<- FindNeighbors(merged, dims = dim.use,reduction = 'harmony')
merged <- FindClusters(object = merged,resolution = 0.3)
merged <- RunTSNE(merged, dims = dim.use,check_duplicates = FALSE,reduction = 'harmony')
all.markers <- FindAllMarkers(merged, only.pos = TRUE, 
                              min.pct = 0.25, logfc.threshold = 0.25)
write.table(all.markers,file=paste0("./",sam.name,"/",sam.name,"_marker_genes_tsne_res0.3_",max(dim.use),"PC.txt"),sep="\t",quote = F)
marker.sig <- all.markers %>% filter(p_val_adj <= 0.05)
top5 <- marker.sig %>% group_by(cluster) %>% top_n(n = 5, wt = avg_logFC)
write.table(top5,file=paste0("./",sam.name,"/",sam.name,"_top5_marker_genes_tsne_",max(dim.use),"PC.txt"),sep="\t",quote = F)
pdf(paste0("./",sam.name,"/MarkerGene-Heatmap_all_cluster_tsne_",max(dim.use),"PC.pdf"),width = 8,height = 5)
DoHeatmap(merged, features = top5$gene,size = 2)
dev.off()
fib_merged=subset(merged,cell_type=='Fibroblasts')
save(fib_merged,file =' fib_merged.Rdata')
T_merged=subset(merged,cell_type=='T')
save(T_merged,file =' T_merged.dermis.Rdata')
M_DC_merged=subset(merged,cell_type=='Macrophage/DC')
save(M_DC_merged,file = "M_DC_merged.dermis.Rdata")
NK_merged=subset(merged,cell_type=='NK')
save(NK_merged,file = "NK_merged.dermis.Rdata")
B_merged=subset(merged,cell_type=='B')
save(B_merged,file = "B_merged.dermis.Rdata")
EC_merged=subset(merged,cell_type=='Endothelial_cells')
save(EC_merged,file = "EC.dermis.Rdata")