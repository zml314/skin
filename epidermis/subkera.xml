####keratinocyte subclustering####
library(Seurat)
library(ggplot2)
library(cowplot)
library(Matrix)
library(dplyr)
library(ggsci)
library(scater)
library(SingleR)
library(monocle)
library(tibble)
library(harmony)
library(clusterProfiler)
library(topGO)
library(Rgraphviz)
library(pathview)
library(org.Hs.eg.db)
library(DOSE)
library(pheatmap)
library(reshape2)
setwd('E:/R_analysis/epidermis.20200822/harmony.20201228/kera/')
load('../kera_merged.Rdata')
kera.lupus=kera_merged
load('E:/R_analysis/skin_HC/keratinocytes_merged.Rdata')
dim(keratinocytes_merged)
rm(kera_merged,keratinocytes_merged)
kera.hc=keratinocytes_merged
kera.merged=merge(x=kera.hc,y=kera.lupus)
rm(kera.hc,kera.lupus)
merged=kera.merged
rm(kera.merged)
sam.name <- "multi"
if(!dir.exists(sam.name)){
              dir.create(sam.name)
}
merged <- NormalizeData(merged, normalization.method = "LogNormalize",scale.factor = 10000)
merged <- FindVariableFeatures(merged, selection.method = "vst", nfeatures = 2000)
all.genes <- rownames(merged)
merged <- ScaleData(merged, features = row.names(merged))
merged <- ScaleData(merged, vars.to.regress = "percent.mt")
merged <- RunPCA(merged, features = VariableFeatures(object = merged))
pdf(paste0("./",sam.name,"/PCA-ElbowPlot.pdf"),width = 6,height = 5)
ElbowPlot(merged,ndims = 40)
dev.off()
library(harmony)
merged=RunHarmony(merged,group.by.vars ='orig.ident')
dim.use=1:30
merged<- FindNeighbors(merged, dims = dim.use,reduction = 'harmony')
merged <- FindClusters(merged, resolution =0.3)
merged <- RunTSNE(merged, dims = dim.use,reduction = 'harmony')
pdf(paste0("./",sam.name,"/tsne_Plot.harmony_res0.3_",max(dim.use),"PC.pdf"),width = 5,height = 4)
DimPlot(object = merged, pt.size=0.1,label = T)
dev.off()
all.markers <- FindAllMarkers(merged, only.pos = TRUE, 
                              min.pct = 0.25, logfc.threshold = 0.25)
write.table(all.markers,file=paste0("./",sam.name,"/",sam.name,"_marker_genes_tsne_res0.3_",max(dim.use),"PC.txt"),sep="\t",quote = F)
merged=subset(merged,seurat_clusters!='12')
b=table(merged$sample,merged$subcluster.1)
b=as.data.frame(b)
write.table(b,file = 'sample.seurat.cluster.kera.txt',sep = '\t',row.names = F)
c=table(merged$orig.ident,merged$subcluster.1)
c=as.data.frame(c)
write.table(c,file = 'orig.seurat.cluster.kera.txt',sep = '\t',row.names = F)
p1=ggplot(b,mapping = aes(Var1,Freq,fill=Var2))+geom_bar(stat='identity',position='fill') +
              labs(x = 'Sample',y = 'Proportion of cells') +theme(axis.title =element_text(size = 16),axis.text =element_text(size = 14, color = 'black'),
                                                                  axis.text.x = element_text(angle = 45, hjust = 1))
p2=p1+scale_fill_manual(values=cols)

p3=p2 + theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p3
ggsave(filename='sample.fill.pdf',plot=p3,width=5,height=4)
table(merged$seurat_clusters)
a=0:14
for (i in a) {
              gene=all.markers$cluster==i
              gene=all.markers[gene,]
              genename <- as.character(gene$gene)
              genename=mapIds(x = org.Hs.eg.db,keys =genename,
                              keytype = "SYMBOL",column = "ENTREZID")
              enrich.go.BP=enrichGO(gene = genename,
                                    OrgDb = org.Hs.eg.db,
                                    keyType = 'ENTREZID',
                                    ont = 'BP',
                                    pvalueCutoff = 0.01,
                                    qvalueCutoff = 0.05,readable = T)
              enrich.KEGG=enrichKEGG(gene = genename,organism = "hsa",
                                     keyType = "kegg",pvalueCutoff = 0.01,
                                     use_internal_data = F,qvalueCutoff = 0.05)
              
              write.table(enrich.go.BP,file =paste0(i,'_K.go.txt') ,sep='\t')
              write.table(enrich.KEGG,file =paste0(i,'_K.kegg.txt') ,sep='\t')
}
table(Idents(merged))
table(merged$orig.ident)
Idents(merged)=merged$sample
merged@misc$averageExpression=AverageExpression(merged)
all.markers=merged@misc$averageExpression
write.table(merged@misc$averageExpression$RNA,file = 'average.expression.sample.txt',sep = '\t',row.names = T,quote = F)
GO=read.table('./kera24111214.all.go.txt',sep = '\t',header = T,stringsAsFactors = F,quote = '')
GO=GO[,c(3,8,10,11)]
GO1=read.table('./kera24111214.select.go.txt',sep = '\t',header = T,stringsAsFactors = F)
GO7=GO[GO$Description%in%GO1$Description,]
GO7$subcluster=paste0('SC',GO7$subcluster)
write.table(GO7,file = 'subT.GO7.burble.txt',sep = '\t')
saveRDS(merged, file = "./multi/subkera_tutorial_res0.3.rds")
save(merged,file="./multi/subkera_res0.3.Robj") 
rm(list=ls())
load('./multi/subkera_res0.3.Robj')
table(Idents(merged))
Idents(merged)=merged$seurat_clusters
sub_kera <- subset(merged, idents=c('3','2','4'))
markers <- FindAllMarkers(sub_kera, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
markers.1=markers[markers$pct.1>0.5&markers$pct.2<0.5,]
data <- as(as.matrix(sub_kera@assays$RNA@data), 'sparseMatrix')
pd <- new('AnnotatedDataFrame', data = sub_kera@meta.data)
fData <- data.frame(gene_short_name = row.names(data), row.names = row.names(data))
fd <- new('AnnotatedDataFrame', data = fData)
cds <- newCellDataSet(data,
                      phenoData = pd,
                      featureData = fd,
                      lowerDetectionLimit = 0.5,
                      expressionFamily = negbinomial.size());
cds <- estimateSizeFactors(cds)
cds <- estimateDispersions(cds)
ordering_genes <- row.names (subset(markers.1, p_val < 0.01))
cds.1 <- setOrderingFilter(cds, ordering_genes)
HSMM <- reduceDimension(cds.1, max_components = 2,
                        method = 'DDRTree')
HSMM <- orderCells(HSMM)
pdf('./multi/plot_cell_trajectory_seurat_clusters_subkera3.pdf')
plot_cell_trajectory(HSMM, color_by = "seurat_clusters")
dev.off()
pdf('./multi/plot_cell_trajectory_state_subkera3.pdf')
plot_cell_trajectory(HSMM, color_by = "State")
dev.off()
pdf('./multi/plot_cell_trajectory_pseudotime_subkera3.pdf')
plot_cell_trajectory(HSMM, color_by = "Pseudotime")
dev.off()